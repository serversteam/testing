<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
/*********************************************************************************
 * The contents of this file are subject to the Common Public Attribution
 * License Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.openemm.org/cpal1.html. The License is based on the Mozilla
 * Public License Version 1.1 but Sections 14 and 15 have been added to cover
 * use of software over a computer network and provide for limited attribution
 * for the Original Developer. In addition, Exhibit A has been modified to be
 * consistent with Exhibit B.
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 * 
 * The Original Code is OpenEMM.
 * The Original Developer is the Initial Developer.
 * The Initial Developer of the Original Code is AGNITAS AG. All portions of
 * the code written by AGNITAS AG are Copyright (c) 2007 AGNITAS AG. All Rights
 * Reserved.
 * 
 * Contributor(s): AGNITAS AG. 
 ********************************************************************************/
-->
  
<!-- cronExpression-Syntax
	* * * * * ?
	| | | | | |
	| | | | | +_____ day of week (MON - SUN)
	| | | | +_______ month (1 - 12)
	| | | +_________ day of month (1 - 31)
	| | +___________ hour (0 - 23)
	| +_____________ min (0 - 59) (0/5 = every 5 minutes)
	+_______________ sec (0 - 59)
-->

<beans>
    <!-- Scheduler for Date-Based Mailings -->
    <bean id="Ruler" class="org.agnitas.backend.RulerImpl">
    </bean>
    
    <bean id="dateBasedMailingsJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="Ruler"/>
        <property name="targetMethod" value="kickOffSimple"/>
        <property name="concurrent" value="false"/>
    </bean>
    
    <bean id="delayedMailingsJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="Ruler"/>
        <property name="targetMethod" value="kickOffDelayed"/>
        <property name="concurrent" value="false"/>
    </bean>
        
    <bean id="dateBasedMailingsCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="dateBasedMailingsJob"/>
        <property name="cronExpression" value="${dateBasedMailings.cronExpression}"/>
    </bean>
    
    <bean id="delayedMailingsCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="delayedMailingsJob"/>
        <property name="cronExpression" value="${delayedMailings.cronExpression}"/>
    </bean>
    
    <bean name="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="schedulerName" value="openemmScheduler" />
        <property name="triggers">
            <list>
                <ref bean="dateBasedMailingsCronTrigger"/>
                <ref bean="delayedMailingsCronTrigger"/>
                <ref bean="JobQueueTrigger" />
            </list>
        </property>
    </bean>
    
    <!-- Dao for cleansing old DB entries (only needed in JobQueue: DBCleanerJobWorker) -->
    <bean id="CleanDBDao" class="org.agnitas.dao.impl.CleanDBDaoImpl">
		<property name="dataSource" ref="dataSource" />
    </bean>
	
	<!-- ********************* -->
	<!-- * Job Queue (Start) * -->
	<!-- ********************* -->
	
	<!-- check for queued jobs to execute -->
	<bean id="JobQueueJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="org.agnitas.service.JobQueueQuartzJob" />
		<property name="name" value="JobQueueJob" />
		<property name="jobDataAsMap">
			<map>
				<entry>
					<key>
						<value>jobQueueService</value>
					</key>
					<ref bean="JobQueueService" />
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- Wait 10 seconds after system startup and run JobQueueService repeatedly every 60 seconds (keep in mind to set active status in config_tbl) -->
	<bean id="JobQueueTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
	    <property name="jobDetail" ref="JobQueueJob" />
	    <property name="startDelay" value="10000" />
	    <property name="repeatInterval" value="60000" />
	</bean>
	
	<!-- ********************* -->
	<!-- * Job Queue (End)   * -->
	<!-- ********************* -->
</beans>
